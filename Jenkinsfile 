pipeline {
    agent any
    stages {
        stage('Build') {
            steps {
                // Build the code using Maven
                sh 'mvn clean package'
            }
        }
        stage('Unit and Integration Tests') {
            steps {
                // Run unit tests using JUnit
                sh 'mvn test'
                // Run integration tests using Selenium
                sh 'mvn integration-test'
            }
        }
        stage('Code Analysis') {
            steps {
                // Integrate a code analysis tool like SonarQube to analyse the code
                sh 'mvn sonar:sonar'
            }
        }
        stage('Security Scan') {
            steps {
                // Perform a security scan on the code using a tool like OWASP ZAP
                sh 'zap-cli --zap-url http://localhost -t http://localhost:8080 -r report.html -x report.xml -J ascan --spider'
            }
        }
        stage('Deploy to Staging') {
            steps {
                // Deploy the application to a staging server using AWS CLI
                sh 'aws s3 cp target/app.jar s3://my-bucket'
                sh 'aws ec2 run-instances --image-id ami-0123456789abcdef --count 1 --instance-type t2.micro'
            }
        }
        stage('Integration Tests on Staging') {
            steps {
                // Run integration tests on the staging environment using Selenium
                sh 'mvn verify'
            }
        }
        stage('Deploy to Production') {
            steps {
                // Deploy the application to a production server using AWS CLI
                sh 'aws s3 cp target/app.jar s3://my-bucket'
                sh 'aws ec2 run-instances --image-id ami-0123456789abcdef --count 1 --instance-type t2.medium'
            }
        }
    }
}
